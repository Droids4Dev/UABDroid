/*
   Copyright 2012 Ruben Serrano, Joan Fuentes

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
package org.uab.deic.uabdroid.services;

import java.util.Calendar;
import java.util.Locale;

import org.uab.deic.uabdroid.R;
import org.uab.deic.uabdroid.SessionDetailsActivity;
import org.uab.deic.uabdroid.adapters.DatabaseAdapter;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.text.Html;
import android.widget.RemoteViews;

/**
 * 
 * @author Ruben Serrano
 *
 */

public class NextSessionWidget extends AppWidgetProvider 
{
	public static final String NEXT_SESSION_WIDGET = "org.uab.deic.uabdroid.NEXT_SESSION_WIDGET";

	/* (non-Javadoc)
	 * This method is called every 48 hours, as defined in @xml/nextsession_widget_info/android:updatePeriodMillis
	 * As calling this method wakes the device, we should consider using an non-waking inexact repeating alarm
	 * @see android.appwidget.AppWidgetProvider#onUpdate(android.content.Context, android.appwidget.AppWidgetManager, int[])
	 */
	@Override
	public void onUpdate(Context _context, AppWidgetManager _appWidgetManager, int[] _appWidgetIds) 
	{
		super.onUpdate(_context, _appWidgetManager, _appWidgetIds);
		updateSessionInfo(_context, _appWidgetManager, _appWidgetIds);
	}

	/* (non-Javadoc)
	 * As AppWidgetProvider is a subclass of BroadcastReceiver, we override the method onReceive in order
	 * to capture the update intent generated by the application (or by an alarm in a future) 
	 * @see android.appwidget.AppWidgetProvider#onReceive(android.content.Context, android.content.Intent)
	 */
	@Override
	public void onReceive(Context _context, Intent _intent) 
	{
		super.onReceive(_context, _intent);
		if (_intent.getAction().equals(NEXT_SESSION_WIDGET)) 
		{
			updateSessionInfo(_context);
		}
	}
	
	/**
	 * Method used for updating the widget from within the application execution
	 * (or if it was called by an alarm)
	 * @param _context
	 */
	public void updateSessionInfo(Context _context) 
	{
		ComponentName thisWidget = new ComponentName(_context, NextSessionWidget.class);
		AppWidgetManager appWidgetManager =	AppWidgetManager.getInstance(_context);
		int[] appWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);
		
		updateSessionInfo(_context, appWidgetManager, appWidgetIds);
	}
	
	/**
	 * Method used for updating the widget
	 * @param _context
	 * @param _appWidgetManager
	 * @param _appWidgetIds
	 */
	public void updateSessionInfo(Context _context, AppWidgetManager _appWidgetManager, int[] _appWidgetIds) 
	{
		final int appWidgetsIdArrayLength = _appWidgetIds.length;
		
		for (int i = 0; i < appWidgetsIdArrayLength; i++) 
		{
			RemoteViews views = new RemoteViews(_context.getPackageName(),R.layout.nextsession_widget);
			
			int appWidgetId = _appWidgetIds[i];
			
			ContentResolver contentResolver = _context.getContentResolver();
		    Cursor cursor = contentResolver.query(SessionsProvider.CONTENT_URI, null, null, null, null);
		    
	    	String date = "";
	    	String hour = "";
	    	
	    	String title = _context.getResources().getString(R.string.next_session_widget_default_title);
	    	String content = _context.getResources().getString(R.string.next_session_widget_default_content);
		    
		    if (cursor.getCount() > 0)
		    {	
				int indexTitle = 0; 
		    	int indexContent = 0;
		    	
		    	cursor.moveToFirst();
		    	
		    	int indexHour = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_HOUR);
		    	int indexDate = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_DATE);
		    	
		    	Calendar currentDate = Calendar.getInstance();
		    	Calendar sessionDate = Calendar.getInstance();
		    	
			    if (Locale.getDefault().toString().equalsIgnoreCase("ca_ES"))
		    	{	
		    		indexTitle = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_TITLE_CA);
		    		indexContent = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_CONTENT_CA);
		    	}
		    	else
		    	{
		    		indexTitle = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_TITLE_ES);
		    		indexContent = cursor.getColumnIndex(DatabaseAdapter.KEY_SESSIONS_CONTENT_ES);
		    	}
		    	
		    	do 
		    	{
		    		date = cursor.getString(indexDate);
		    		hour = cursor.getString(indexHour);
		    		
		    		String[] splitDate = date.split("/");
		    		String[] splitHour = hour.split(":");
		    		
		    		sessionDate.set(Calendar.YEAR, Integer.valueOf(splitDate[2]));
		    		sessionDate.set(Calendar.MONTH, Integer.valueOf(splitDate[1])-1);
		    		sessionDate.set(Calendar.DAY_OF_MONTH, Integer.valueOf(splitDate[0]));
		    		sessionDate.set(Calendar.HOUR_OF_DAY, Integer.valueOf(splitHour[0]));
		    		sessionDate.set(Calendar.MINUTE, Integer.valueOf(splitHour[1]));
		    		
		    		if (currentDate.compareTo(sessionDate)<=0)
		    		{
		    			title = cursor.getString(indexTitle);
		    			content = cursor.getString(indexContent);
		    			
		    			Intent intent = new Intent(_context, SessionDetailsActivity.class);
		    			int sessionId = cursor.getInt(cursor.getColumnIndex(DatabaseAdapter.KEY_ROWID));
		    			intent.putExtra("number_of_session", sessionId);
		    			String sessionTitle = _context.getResources().getString(R.string.session_text) + " " + Integer.toString(sessionId);
		    			intent.putExtra("titleActionBar", sessionTitle);
		    			
		    			PendingIntent pendingIntent = PendingIntent.getActivity(_context, 0, intent, 0);
		    			
		    			views.setOnClickPendingIntent(R.id.next_session_widget_layout, pendingIntent);	    
		    			
		    			break;
		    		}
		    	} 
		    	while (cursor.moveToNext());
		    }
		    cursor.close();
			
			views.setTextViewText(R.id.next_session_name, title);
			views.setTextViewText(R.id.next_session_description, Html.fromHtml(content.substring(3)));
			views.setTextViewText(R.id.next_session_date, date + " - " + hour);
			_appWidgetManager.updateAppWidget(appWidgetId, views);
		}
	}

}
